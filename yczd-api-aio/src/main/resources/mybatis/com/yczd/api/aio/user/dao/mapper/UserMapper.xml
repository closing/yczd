<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yczd.api.aio.user.repository.dao.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.yczd.api.aio.user.model.entity.User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="createtime" jdbcType="VARCHAR" property="createtime" />
    <result column="pay_password" jdbcType="VARCHAR" property="payPassword" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="role_type" jdbcType="INTEGER" property="roleType" />
    <result column="balance" jdbcType="DOUBLE" property="balance" />
    <result column="wx_token" jdbcType="VARCHAR" property="wxToken" />
    <result column="qq_token" jdbcType="VARCHAR" property="qqToken" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="lasttime" jdbcType="VARCHAR" property="lasttime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, phone, password, nick_name, icon, createtime, pay_password, state, role_type,
    balance, wx_token, qq_token, sex, lasttime
  </sql>
  <select id="selectByExample" parameterType="com.yczd.api.aio.user.model.entity.UserCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yc_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yc_users
    where id = #{id,jdbcType=VARCHAR}
  </select>
   <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from yc_users
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from yc_users
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.yczd.api.aio.user.model.entity.UserCriteria">
    delete from yc_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yczd.api.aio.user.model.entity.User">
    insert into yc_users (id, phone, password,
      nick_name, icon, createtime,
      pay_password, state, role_type,
      balance, wx_token, qq_token,
      sex, lasttime)
    values (#{id,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{nickName,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, #{createtime,jdbcType=VARCHAR},
      #{payPassword,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{roleType,jdbcType=INTEGER},
      #{balance,jdbcType=DOUBLE}, #{wxToken,jdbcType=VARCHAR}, #{qqToken,jdbcType=VARCHAR},
      #{sex,jdbcType=INTEGER}, #{lasttime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yczd.api.aio.user.model.entity.User">
    insert into yc_users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="nickName != null">
        nick_name,
      </if>
      <if test="icon != null">
        icon,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="payPassword != null">
        pay_password,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="roleType != null">
        role_type,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="wxToken != null">
        wx_token,
      </if>
      <if test="qqToken != null">
        qq_token,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="lasttime != null">
        lasttime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="payPassword != null">
        #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="roleType != null">
        #{roleType,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DOUBLE},
      </if>
      <if test="wxToken != null">
        #{wxToken,jdbcType=VARCHAR},
      </if>
      <if test="qqToken != null">
        #{qqToken,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="lasttime != null">
        #{lasttime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yczd.api.aio.user.model.entity.UserCriteria" resultType="java.lang.Long">
    select count(*) from yc_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update yc_users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.nickName != null">
        nick_name = #{record.nickName,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null">
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=VARCHAR},
      </if>
      <if test="record.payPassword != null">
        pay_password = #{record.payPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.roleType != null">
        role_type = #{record.roleType,jdbcType=INTEGER},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=DOUBLE},
      </if>
      <if test="record.wxToken != null">
        wx_token = #{record.wxToken,jdbcType=VARCHAR},
      </if>
      <if test="record.qqToken != null">
        qq_token = #{record.qqToken,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.lasttime != null">
        lasttime = #{record.lasttime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update yc_users
    set id = #{record.id,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      nick_name = #{record.nickName,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=VARCHAR},
      pay_password = #{record.payPassword,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      role_type = #{record.roleType,jdbcType=INTEGER},
      balance = #{record.balance,jdbcType=DOUBLE},
      wx_token = #{record.wxToken,jdbcType=VARCHAR},
      qq_token = #{record.qqToken,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      lasttime = #{record.lasttime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yczd.api.aio.user.model.entity.User">
    update yc_users
    <set>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null">
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="icon != null">
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="payPassword != null">
        pay_password = #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="roleType != null">
        role_type = #{roleType,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DOUBLE},
      </if>
      <if test="wxToken != null">
        wx_token = #{wxToken,jdbcType=VARCHAR},
      </if>
      <if test="qqToken != null">
        qq_token = #{qqToken,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="lasttime != null">
        lasttime = #{lasttime,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yczd.api.aio.user.model.entity.User">
    update yc_users
    set phone = #{phone,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=VARCHAR},
      pay_password = #{payPassword,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      role_type = #{roleType,jdbcType=INTEGER},
      balance = #{balance,jdbcType=DOUBLE},
      wx_token = #{wxToken,jdbcType=VARCHAR},
      qq_token = #{qqToken,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      lasttime = #{lasttime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.yczd.api.aio.user.model.entity.UserCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from yc_users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>
